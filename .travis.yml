sudo: required
language: java
services:
- docker
jdk:
- oraclejdk8
env:
  global:
  - PROJECT_NAME='spring-auth-api'
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - GCHOME=$HOME/google-cloud-sdk
#cache:
#  directories:
    #- $GCHOME
before_install:
- openssl aes-256-cbc -K $encrypted_70489a482a02_key -iv $encrypted_70489a482a02_iv
  -in gcloud-credentials.json.enc -out gcloud-credentials.json -d
- if [ -d $GCHOME ]; then
    rm -rf $GCHOME;
  fi
- curl https://sdk.cloud.google.com | bash;  
- $GCHOME/bin/gcloud version
- $GCHOME/bin/gcloud components install kubectl -q
- $GCHOME/bin/gcloud auth activate-service-account --key-file gcloud-credentials.json
- $GCHOME/bin/gcloud config set project "${PROJECT_NAME}-project"
- $GCHOME/bin/gcloud container clusters get-credentials spring-auth-api-cluster --zone us-east1-d --project "${PROJECT_NAME}-project"
script:
- ls -l
- cp Dockerfile build/libs/Dockerfile
- cp application.properties build/libs/application.properties
- cd build/libs
- docker build -t jbatista/spring-auth-api-example .
- docker tag "jbatista/${PROJECT_NAME}-example" "gcr.io/${PROJECT_NAME}-project/${PROJECT_NAME}-example"
- $GCHOME/bin/gcloud docker -- push "gcr.io/${PROJECT_NAME}-project/${PROJECT_NAME}-example"
- $GCHOME/bin/kubectl run web-node --image="gcr.io/${PROJECT_NAME}-project/${PROJECT_NAME}-example" --port=80
